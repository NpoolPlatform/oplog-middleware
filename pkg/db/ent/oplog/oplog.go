// Code generated by ent, DO NOT EDIT.

package oplog

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the oplog type in the database.
	Label = "op_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldAutoID holds the string denoting the auto_id field in the database.
	FieldAutoID = "auto_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldArguments holds the string denoting the arguments field in the database.
	FieldArguments = "arguments"
	// FieldHumanReadable holds the string denoting the human_readable field in the database.
	FieldHumanReadable = "human_readable"
	// FieldResult holds the string denoting the result field in the database.
	FieldResult = "result"
	// FieldFailReason holds the string denoting the fail_reason field in the database.
	FieldFailReason = "fail_reason"
	// FieldElapsedMillisecs holds the string denoting the elapsed_millisecs field in the database.
	FieldElapsedMillisecs = "elapsed_millisecs"
	// Table holds the table name of the oplog in the database.
	Table = "op_logs"
)

// Columns holds all SQL columns for oplog fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldAutoID,
	FieldAppID,
	FieldUserID,
	FieldMethod,
	FieldArguments,
	FieldHumanReadable,
	FieldResult,
	FieldFailReason,
	FieldElapsedMillisecs,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/oplog-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultUserID holds the default value on creation for the "user_id" field.
	DefaultUserID func() uuid.UUID
	// DefaultMethod holds the default value on creation for the "method" field.
	DefaultMethod string
	// DefaultArguments holds the default value on creation for the "arguments" field.
	DefaultArguments string
	// DefaultHumanReadable holds the default value on creation for the "human_readable" field.
	DefaultHumanReadable string
	// DefaultResult holds the default value on creation for the "result" field.
	DefaultResult string
	// DefaultFailReason holds the default value on creation for the "fail_reason" field.
	DefaultFailReason string
	// DefaultElapsedMillisecs holds the default value on creation for the "elapsed_millisecs" field.
	DefaultElapsedMillisecs uint32
)
